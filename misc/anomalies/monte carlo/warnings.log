WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:198: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f'Iter{s}'] = simmed_line

