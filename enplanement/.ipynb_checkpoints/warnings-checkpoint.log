WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning:

DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`


WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning:

DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`


WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning:

DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`


WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning:

DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`


WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning:

DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`


WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning:

DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`


WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning:

DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`


WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning:

DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`


WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning:

DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`


WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning:

DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`


WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning:

DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`


WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning:

DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`


WARNING:root:warning: AR1 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR2 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR3 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR4 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR5 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR6 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR7 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR8 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR9 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR10 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR11 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR12 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR13 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR14 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR15 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR16 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR17 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR18 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR19 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR20 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR21 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR22 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR23 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR24 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR25 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR26 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR27 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR28 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR29 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR30 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR31 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR32 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR33 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR34 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR35 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR36 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:796: UndefinedMetricWarning:

R^2 score is not well-defined with less than two samples.


WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:root:warning: AR1 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR2 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR3 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR4 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR5 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR6 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR7 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR8 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR9 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR10 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR11 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR12 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR13 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR14 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR15 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR16 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR17 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR18 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR19 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR20 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR21 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR22 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR23 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR24 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR25 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR26 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR27 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR28 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR29 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR30 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR31 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR32 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR33 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR34 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR35 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR36 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR1 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR2 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR3 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR4 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR5 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR6 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR7 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR8 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR9 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR10 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR11 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR12 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR13 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR14 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR15 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR16 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR17 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR18 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR19 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR20 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR21 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR22 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR23 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR24 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR25 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR26 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR27 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR28 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR29 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR30 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR31 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR32 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR33 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR34 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR35 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR36 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:root:warning: AR1 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR2 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR3 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR4 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR5 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR6 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR7 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR8 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR9 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR10 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR11 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR12 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR13 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR14 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR15 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR16 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR17 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR18 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR19 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR20 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR21 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR22 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR23 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR24 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR25 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR26 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR27 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR28 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR29 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR30 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR31 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR32 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR33 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR34 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR35 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR36 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:root:warning: AR1 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR2 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR3 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR4 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR5 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR6 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR7 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR8 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR9 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR10 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR11 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR12 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR13 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR14 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR15 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR16 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR17 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR18 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR19 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR20 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR21 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR22 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR23 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR24 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR25 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR26 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR27 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR28 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR29 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR30 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR31 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR32 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR33 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR34 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR35 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR36 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`

WARNING:py.warnings:DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`

WARNING:py.warnings:DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  results[f"Iter{s}"] = simmed_line

WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning:

DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`


WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning:

DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`


WARNING:py.warnings:C:\Users\michaelkeith\Anaconda3\lib\site-packages\scalecast\AnomalyDetector.py:202: PerformanceWarning:

DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`


WARNING:root:warning: AR1 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR2 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR3 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR4 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR5 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR6 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR7 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR8 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR9 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR10 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR11 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR12 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR13 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR14 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR15 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR16 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR17 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR18 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR19 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR20 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR21 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR22 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR23 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR24 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR25 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR26 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR27 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR28 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR29 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR30 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR31 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR32 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR33 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR34 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR35 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR36 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:root:warning: AR1 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR2 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR3 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR4 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR5 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR6 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR7 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR8 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR9 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR10 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR11 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR12 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR13 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR14 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR15 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR16 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR17 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR18 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR19 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR20 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR21 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR22 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR23 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR24 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR25 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR26 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR27 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR28 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR29 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR30 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR31 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR32 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR33 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR34 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR35 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR36 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:root:warning: AR1 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR2 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR3 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR4 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR5 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR6 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR7 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR8 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR9 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR10 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR11 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR12 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR13 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR14 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR15 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR16 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR17 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR18 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR19 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR20 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR21 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR22 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR23 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR24 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR25 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR26 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR27 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR28 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR29 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR30 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR31 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR32 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR33 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR34 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR35 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR36 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:ntree_limit is deprecated, use `iteration_range` or model slicing instead.

WARNING:py.warnings:DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`

WARNING:py.warnings:DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`

WARNING:py.warnings:DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`

WARNING:root:warning: AR1 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR2 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR3 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR4 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR5 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR6 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR7 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR8 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR9 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR10 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR11 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR12 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR13 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR14 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR15 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR16 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR17 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR18 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR19 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR20 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR21 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR22 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR23 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR24 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR25 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR26 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR27 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR28 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR29 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR30 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR31 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR32 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR33 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR34 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR35 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:warning: AR36 is not the correct length in the future_dates attribute and this can cause errors when forecasting. its length is 1 and future_dates length is 4
WARNING:root:could not evaluate the paramaters: {'normalizer': 'scale', 'lags': {'Hou-Dom': [2], 'Hou-Int': [1, 24], 'IAH-Dom': [3, 24, 36], 'Revenue Passenger-miles/Domestic': 1, 'Number of available seats Domestic and international level': 1}}. error: 'Hou-Int'
WARNING:root:could not evaluate the paramaters: {'normalizer': None, 'lags': {'Hou-Dom': [2], 'Hou-Int': [1, 24], 'IAH-Dom': [3, 24, 36], 'Revenue Passenger-miles/Domestic': 1, 'Number of available seats Domestic and international level': 1}}. error: 'Hou-Int'
WARNING:root:could not evaluate the paramaters: {'normalizer': None, 'lags': {'Hou-Dom': [2], 'Hou-Int': [1, 24], 'IAH-Dom': [3, 24, 36], 'Revenue Passenger-miles/Domestic': 1, 'Number of available seats Domestic and international level': 1}}. error: list index out of range
WARNING:root:none of the keyword/value combos stored in the grid could be evaluated for the mlr model
WARNING:py.warnings:X does not have valid feature names, but MinMaxScaler was fitted with feature names

WARNING:py.warnings:X does not have valid feature names, but MinMaxScaler was fitted with feature names

WARNING:py.warnings:X does not have valid feature names, but MinMaxScaler was fitted with feature names

WARNING:py.warnings:X does not have valid feature names, but MinMaxScaler was fitted with feature names

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:root:could not evaluate the paramaters: {'normalizer': 'scale', 'lags': {'Hou-Dom': [2], 'Hou-Int': [1, 24], 'IAH-Dom': [3, 24, 36], 'Revenue Passenger-miles/Domestic': 1, 'Number of available seats Domestic and international level': 1}}. error: 'Hou-Int'
WARNING:root:could not evaluate the paramaters: {'normalizer': None, 'lags': {'Hou-Dom': [2], 'Hou-Int': [1, 24], 'IAH-Dom': [3, 24, 36], 'Revenue Passenger-miles/Domestic': 1, 'Number of available seats Domestic and international level': 1}}. error: 'Hou-Int'
WARNING:root:could not evaluate the paramaters: {'normalizer': None, 'lags': {'Hou-Dom': [2], 'Hou-Int': [1, 24], 'IAH-Dom': [3, 24, 36], 'Revenue Passenger-miles/Domestic': 1, 'Number of available seats Domestic and international level': 1}}. error: list index out of range
WARNING:root:none of the keyword/value combos stored in the grid could be evaluated for the mlr model
WARNING:py.warnings:X does not have valid feature names, but MinMaxScaler was fitted with feature names

WARNING:py.warnings:X does not have valid feature names, but MinMaxScaler was fitted with feature names

WARNING:py.warnings:X does not have valid feature names, but MinMaxScaler was fitted with feature names

WARNING:py.warnings:X does not have valid feature names, but MinMaxScaler was fitted with feature names

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:root:could not evaluate the paramaters: {'normalizer': 'scale', 'lags': {'Hou-Dom': [2], 'Hou-Int': [1, 24], 'IAH-Dom': [3, 24, 36], 'Revenue Passenger-miles/Domestic': 1, 'Number of available seats Domestic and international level': 1}}. error: 'Hou-Int'
WARNING:root:could not evaluate the paramaters: {'normalizer': None, 'lags': {'Hou-Dom': [2], 'Hou-Int': [1, 24], 'IAH-Dom': [3, 24, 36], 'Revenue Passenger-miles/Domestic': 1, 'Number of available seats Domestic and international level': 1}}. error: 'Hou-Int'
WARNING:root:could not evaluate the paramaters: {'normalizer': None, 'lags': {'Hou-Dom': [2], 'Hou-Int': [1, 24], 'IAH-Dom': [3, 24, 36], 'Revenue Passenger-miles/Domestic': 1, 'Number of available seats Domestic and international level': 1}}. error: list index out of range
WARNING:root:none of the keyword/value combos stored in the grid could be evaluated for the mlr model
WARNING:py.warnings:X does not have valid feature names, but MinMaxScaler was fitted with feature names

WARNING:py.warnings:X does not have valid feature names, but MinMaxScaler was fitted with feature names

WARNING:py.warnings:X does not have valid feature names, but MinMaxScaler was fitted with feature names

WARNING:py.warnings:X does not have valid feature names, but MinMaxScaler was fitted with feature names

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

WARNING:py.warnings:R^2 score is not well-defined with less than two samples.

